{"ast":null,"code":"var _jsxFileName = \"/Users/lijiheng/CS/GithubProject/minesweeper/src/components/App/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells } from \"../../utils\";\nimport Button from \"../Button\";\nimport { Face } from \"../../types\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState(generateCells());\n  const renderCells = () => {\n    return cells.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Button, {\n      state: cell.state,\n      value: cell.value,\n      row: rowIndex,\n      col: colIndex\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Face\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"image\",\n          \"aria-label\": \"face\",\n          children: Face.smile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: 23\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: renderCells()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WYeyzxP0Pkzpv8qIVTY+VgAuJtU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NumberDisplay","generateCells","Button","Face","jsxDEV","_jsxDEV","App","_s","cells","setCells","renderCells","map","row","rowIndex","cell","colIndex","state","value","col","fileName","_jsxFileName","lineNumber","columnNumber","className","children","role","smile","_c","$RefreshReg$"],"sources":["/Users/lijiheng/CS/GithubProject/minesweeper/src/components/App/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells } from \"../../utils\";\nimport Button from \"../Button\";\nimport { Face } from \"../../types\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  const [cells, setCells] = useState(generateCells());\n\n  const renderCells = (): React.ReactNode => {\n    return cells.map((row, rowIndex) =>\n      row.map((cell, colIndex) => (\n        <Button\n          key={`${rowIndex}-${colIndex}`}\n          state={cell.state}\n          value={cell.value}\n          row={rowIndex}\n          col={colIndex}\n        />\n      ))\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <NumberDisplay value={0} />\n        <div className=\"Face\">\n          <span role=\"image\" aria-label=\"face\">\n            {Face.smile}\n          </span>\n        </div>\n        <NumberDisplay value={23} />\n      </div>\n      <div className=\"Body\">{renderCells()}</div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,aAAa;AAC3C,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,IAAI,QAAQ,aAAa;AAElC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACE,aAAa,CAAC,CAAC,CAAC;EAEnD,MAAMS,WAAW,GAAGA,CAAA,KAAuB;IACzC,OAAOF,KAAK,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAC7BD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACrBV,OAAA,CAACH,MAAM;MAELc,KAAK,EAAEF,IAAI,CAACE,KAAM;MAClBC,KAAK,EAAEH,IAAI,CAACG,KAAM;MAClBL,GAAG,EAAEC,QAAS;MACdK,GAAG,EAAEH;IAAS,GAJR,GAAEF,QAAS,IAAGE,QAAS,EAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK/B,CACF,CACH,CAAC;EACH,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA,CAACL,aAAa;QAACiB,KAAK,EAAE;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3BjB,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBnB,OAAA;UAAMoB,IAAI,EAAC,OAAO;UAAC,cAAW,MAAM;UAAAD,QAAA,EACjCrB,IAAI,CAACuB;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNjB,OAAA,CAACL,aAAa;QAACiB,KAAK,EAAE;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEd,WAAW,CAAC;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACf,EAAA,CA/BID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}