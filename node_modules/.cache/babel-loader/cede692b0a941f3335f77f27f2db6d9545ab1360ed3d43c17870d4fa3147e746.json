{"ast":null,"code":"import { MAX_COLS, MAX_ROWS, NUM_OF_BOMBS } from \"../constants\";\nimport { CellValue, CellState } from \"../types\";\nexport const generateCells = () => {\n  const cells = [];\n\n  // Generate all cells\n  for (let row = 0; row < MAX_ROWS; ++row) {\n    cells.push([]);\n    for (let col = 0; col < MAX_COLS; ++col) {\n      cells[row].push({\n        value: CellValue.none,\n        state: CellState.open\n      });\n    }\n  }\n\n  // Randomly put 10 bombs\n  let bombsPlaced = 0;\n  while (bombsPlaced < NUM_OF_BOMBS) {\n    const row = Math.floor(Math.random() * MAX_ROWS);\n    const col = Math.floor(Math.random() * MAX_COLS);\n    const currentCell = cells[row][col];\n    if (currentCell.value === CellValue.bomb) {\n      continue;\n    }\n  }\n  return cells;\n};","map":{"version":3,"names":["MAX_COLS","MAX_ROWS","NUM_OF_BOMBS","CellValue","CellState","generateCells","cells","row","push","col","value","none","state","open","bombsPlaced","Math","floor","random","currentCell","bomb"],"sources":["/Users/lijiheng/CS/GithubProject/minesweeper/src/utils/index.ts"],"sourcesContent":["import { MAX_COLS, MAX_ROWS, NUM_OF_BOMBS } from \"../constants\";\nimport { Cell, CellValue, CellState } from \"../types\";\n\nexport const generateCells = (): Cell[][] => {\n  const cells: Cell[][] = [];\n\n  // Generate all cells\n  for (let row = 0; row < MAX_ROWS; ++row) {\n    cells.push([]);\n    for (let col = 0; col < MAX_COLS; ++col) {\n      cells[row].push({\n        value: CellValue.none,\n        state: CellState.open,\n      });\n    }\n  }\n\n  // Randomly put 10 bombs\n  let bombsPlaced = 0;\n  while (bombsPlaced < NUM_OF_BOMBS) {\n    const row = Math.floor(Math.random() * MAX_ROWS);\n    const col = Math.floor(Math.random() * MAX_COLS);\n\n    const currentCell = cells[row][col];\n    if (currentCell.value === CellValue.bomb) {\n      continue;\n    }\n  }\n\n  return cells;\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,cAAc;AAC/D,SAAeC,SAAS,EAAEC,SAAS,QAAQ,UAAU;AAErD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAgB;EAC3C,MAAMC,KAAe,GAAG,EAAE;;EAE1B;EACA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGN,QAAQ,EAAE,EAAEM,GAAG,EAAE;IACvCD,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IACd,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGT,QAAQ,EAAE,EAAES,GAAG,EAAE;MACvCH,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC;QACdE,KAAK,EAAEP,SAAS,CAACQ,IAAI;QACrBC,KAAK,EAAER,SAAS,CAACS;MACnB,CAAC,CAAC;IACJ;EACF;;EAEA;EACA,IAAIC,WAAW,GAAG,CAAC;EACnB,OAAOA,WAAW,GAAGZ,YAAY,EAAE;IACjC,MAAMK,GAAG,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,QAAQ,CAAC;IAChD,MAAMQ,GAAG,GAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGjB,QAAQ,CAAC;IAEhD,MAAMkB,WAAW,GAAGZ,KAAK,CAACC,GAAG,CAAC,CAACE,GAAG,CAAC;IACnC,IAAIS,WAAW,CAACR,KAAK,KAAKP,SAAS,CAACgB,IAAI,EAAE;MACxC;IACF;EACF;EAEA,OAAOb,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}