{"ast":null,"code":"import { MAX_COLS, MAX_ROWS } from \"../constants\";\nimport { CellValue, CellState } from \"../types\";\nexport const generateCells = () => {\n  const cells = [];\n  for (let row = 0; row < MAX_ROWS; ++row) {\n    cells.push([]);\n    for (let col = 0; col < MAX_COLS; ++col) {\n      cells[row].push({\n        value: CellValue.none,\n        state: CellState.open\n      });\n    }\n  }\n  return cells;\n};","map":{"version":3,"names":["MAX_COLS","MAX_ROWS","CellValue","CellState","generateCells","cells","row","push","col","value","none","state","open"],"sources":["/Users/lijiheng/CS/GithubProject/minesweeper/src/utils/index.ts"],"sourcesContent":["import { MAX_COLS, MAX_ROWS } from \"../constants\";\nimport { Cell, CellValue, CellState } from \"../types\";\n\nexport const generateCells = (): Cell[][] => {\n  const cells: Cell[][] = [];\n\n  for (let row = 0; row < MAX_ROWS; ++row) {\n    cells.push([]);\n    for (let col = 0; col < MAX_COLS; ++col) {\n      cells[row].push({\n        value: CellValue.none,\n        state: CellState.open,\n      });\n    }\n  }\n\n  return cells;\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,cAAc;AACjD,SAAeC,SAAS,EAAEC,SAAS,QAAQ,UAAU;AAErD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAgB;EAC3C,MAAMC,KAAe,GAAG,EAAE;EAE1B,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,QAAQ,EAAE,EAAEK,GAAG,EAAE;IACvCD,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IACd,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGR,QAAQ,EAAE,EAAEQ,GAAG,EAAE;MACvCH,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC;QACdE,KAAK,EAAEP,SAAS,CAACQ,IAAI;QACrBC,KAAK,EAAER,SAAS,CAACS;MACnB,CAAC,CAAC;IACJ;EACF;EAEA,OAAOP,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}