{"ast":null,"code":"var _jsxFileName = \"/Users/lijiheng/CS/GithubProject/minesweeper/src/components/App/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells, openMultipleCells } from \"../../utils\";\nimport Button from \"../Button\";\nimport { CellState, CellValue, Face } from \"../../types\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState(generateCells());\n  const [face, setFace] = useState(Face.smile);\n  const [time, setTime] = useState(0);\n  const [live, setLive] = useState(false);\n  const [bombCounter, setBombCounter] = useState(10);\n  const [lose, setLose] = useState(false);\n  useEffect(() => {\n    const handleMouseDown = () => {\n      setFace(Face.oh);\n    };\n    const handleMouseUp = () => {\n      setFace(Face.smile);\n    };\n    window.addEventListener(\"mousedown\", handleMouseDown);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleMouseDown);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    if (live && time < 999) {\n      const timer = setInterval(() => {\n        setTime(time + 1);\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [live, time]);\n  useEffect(() => {\n    if (lose) {\n      setLive(false);\n      setFace(Face.lost);\n    }\n  }, [lose]);\n  const handleCellClick = (rowParam, colParam) => () => {\n    // Start the game\n    if (!live) {\n      setLive(true);\n    }\n    const currentCell = cells[rowParam][colParam];\n    let newCells = cells.slice();\n    if ([CellState.visible, CellState.flagged].includes(currentCell.state)) {\n      return;\n    }\n    if (currentCell.value === CellValue.bomb) {\n      setLose(true);\n      newCells = showAllBombs();\n      setCells(newCells);\n    } else if (currentCell.value === CellValue.none) {\n      newCells = openMultipleCells(newCells, rowParam, colParam);\n      setCells(newCells);\n    } else {\n      newCells[rowParam][colParam].state = CellState.visible;\n      setCells(newCells);\n    }\n  };\n  const handleCellContext = (rowParam, colParam) => e => {\n    e.preventDefault();\n    if (!live) return;\n    const currentCells = cells.slice();\n    const currentCell = cells[rowParam][colParam];\n    if (currentCell.state === CellState.visible) {\n      return;\n    } else if (currentCell.state === CellState.open) {\n      currentCells[rowParam][colParam].state = CellState.flagged;\n      setCells(currentCells);\n      setBombCounter(bombCounter - 1);\n    } else if (currentCell.state === CellState.flagged) {\n      currentCells[rowParam][colParam].state = CellState.open;\n      setCells(currentCells);\n      setBombCounter(bombCounter + 1);\n    }\n  };\n  const handleFaceClick = () => {\n    if (live) {\n      setLive(false);\n      setTime(0);\n      setCells(generateCells());\n      setBombCounter(10);\n      setLose(false);\n    }\n  };\n  const renderCells = () => {\n    return cells.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Button, {\n      state: cell.state,\n      value: cell.value,\n      onClick: handleCellClick,\n      onContext: handleCellContext,\n      row: rowIndex,\n      col: colIndex\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)));\n  };\n  const showAllBombs = () => {\n    const currentCells = cells.slice();\n    return currentCells.map(row => row.map(cell => {\n      if (cell.value === CellValue.bomb) {\n        return {\n          ...cell,\n          state: CellState.visible\n        };\n      }\n      return cell;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: bombCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Face\",\n        onClick: handleFaceClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"image\",\n          \"aria-label\": \"face\",\n          children: face\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: renderCells()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QNBilOlKT9//uOqxCUl+OFAX89c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NumberDisplay","generateCells","openMultipleCells","Button","CellState","CellValue","Face","jsxDEV","_jsxDEV","App","_s","cells","setCells","face","setFace","smile","time","setTime","live","setLive","bombCounter","setBombCounter","lose","setLose","handleMouseDown","oh","handleMouseUp","window","addEventListener","removeEventListener","timer","setInterval","clearInterval","lost","handleCellClick","rowParam","colParam","currentCell","newCells","slice","visible","flagged","includes","state","value","bomb","showAllBombs","none","handleCellContext","e","preventDefault","currentCells","open","handleFaceClick","renderCells","map","row","rowIndex","cell","colIndex","onClick","onContext","col","fileName","_jsxFileName","lineNumber","columnNumber","className","children","role","_c","$RefreshReg$"],"sources":["/Users/lijiheng/CS/GithubProject/minesweeper/src/components/App/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells, openMultipleCells } from \"../../utils\";\nimport Button from \"../Button\";\nimport { Cell, CellState, CellValue, Face } from \"../../types\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  const [cells, setCells] = useState<Cell[][]>(generateCells());\n  const [face, setFace] = useState<Face>(Face.smile);\n  const [time, setTime] = useState<number>(0);\n  const [live, setLive] = useState<boolean>(false);\n  const [bombCounter, setBombCounter] = useState<number>(10);\n  const [lose, setLose] = useState<boolean>(false);\n\n  useEffect(() => {\n    const handleMouseDown = (): void => {\n      setFace(Face.oh);\n    };\n\n    const handleMouseUp = (): void => {\n      setFace(Face.smile);\n    };\n\n    window.addEventListener(\"mousedown\", handleMouseDown);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      window.removeEventListener(\"mousedown\", handleMouseDown);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (live && time < 999) {\n      const timer = setInterval(() => {\n        setTime(time + 1);\n      }, 1000);\n\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [live, time]);\n\n  useEffect(() => {\n    if (lose) {\n      setLive(false);\n      setFace(Face.lost);\n    }\n  }, [lose]);\n\n  const handleCellClick = (rowParam: number, colParam: number) => (): void => {\n    // Start the game\n    if (!live) {\n      setLive(true);\n    }\n\n    const currentCell = cells[rowParam][colParam];\n    let newCells = cells.slice();\n\n    if ([CellState.visible, CellState.flagged].includes(currentCell.state)) {\n      return;\n    }\n\n    if (currentCell.value === CellValue.bomb) {\n      setLose(true);\n      newCells = showAllBombs();\n      setCells(newCells);\n    } else if (currentCell.value === CellValue.none) {\n      newCells = openMultipleCells(newCells, rowParam, colParam);\n      setCells(newCells);\n    } else {\n      newCells[rowParam][colParam].state = CellState.visible;\n      setCells(newCells);\n    }\n  };\n\n  const handleCellContext =\n    (rowParam: number, colParam: number) =>\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n      e.preventDefault();\n\n      if (!live) return;\n\n      const currentCells = cells.slice();\n      const currentCell = cells[rowParam][colParam];\n\n      if (currentCell.state === CellState.visible) {\n        return;\n      } else if (currentCell.state === CellState.open) {\n        currentCells[rowParam][colParam].state = CellState.flagged;\n        setCells(currentCells);\n        setBombCounter(bombCounter - 1);\n      } else if (currentCell.state === CellState.flagged) {\n        currentCells[rowParam][colParam].state = CellState.open;\n        setCells(currentCells);\n        setBombCounter(bombCounter + 1);\n      }\n    };\n\n  const handleFaceClick = (): void => {\n    if (live) {\n      setLive(false);\n      setTime(0);\n      setCells(generateCells());\n      setBombCounter(10);\n      setLose(false);\n    }\n  };\n\n  const renderCells = (): React.ReactNode => {\n    return cells.map((row, rowIndex) =>\n      row.map((cell, colIndex) => (\n        <Button\n          key={`${rowIndex}-${colIndex}`}\n          state={cell.state}\n          value={cell.value}\n          onClick={handleCellClick}\n          onContext={handleCellContext}\n          row={rowIndex}\n          col={colIndex}\n        />\n      ))\n    );\n  };\n\n  const showAllBombs = (): Cell[][] => {\n    const currentCells = cells.slice();\n    return currentCells.map((row) =>\n      row.map((cell) => {\n        if (cell.value === CellValue.bomb) {\n          return {\n            ...cell,\n            state: CellState.visible,\n          };\n        }\n\n        return cell;\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <NumberDisplay value={bombCounter} />\n        <div className=\"Face\" onClick={handleFaceClick}>\n          <span role=\"image\" aria-label=\"face\">\n            {face}\n          </span>\n        </div>\n        <NumberDisplay value={time} />\n      </div>\n      <div className=\"Body\">{renderCells()}</div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,aAAa;AAC9D,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAAeC,SAAS,EAAEC,SAAS,EAAEC,IAAI,QAAQ,aAAa;AAE9D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAWE,aAAa,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAOO,IAAI,CAACS,KAAK,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAU,KAAK,CAAC;EAChD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAU,KAAK,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAM0B,eAAe,GAAGA,CAAA,KAAY;MAClCV,OAAO,CAACR,IAAI,CAACmB,EAAE,CAAC;IAClB,CAAC;IAED,MAAMC,aAAa,GAAGA,CAAA,KAAY;MAChCZ,OAAO,CAACR,IAAI,CAACS,KAAK,CAAC;IACrB,CAAC;IAEDY,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,eAAe,CAAC;IACrDG,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEL,eAAe,CAAC;MACxDG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,IAAIoB,IAAI,IAAIF,IAAI,GAAG,GAAG,EAAE;MACtB,MAAMc,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9Bd,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAM;QACXgB,aAAa,CAACF,KAAK,CAAC;MACtB,CAAC;IACH;EACF,CAAC,EAAE,CAACZ,IAAI,EAAEF,IAAI,CAAC,CAAC;EAEhBlB,SAAS,CAAC,MAAM;IACd,IAAIwB,IAAI,EAAE;MACRH,OAAO,CAAC,KAAK,CAAC;MACdL,OAAO,CAACR,IAAI,CAAC2B,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMY,eAAe,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK,MAAY;IAC1E;IACA,IAAI,CAAClB,IAAI,EAAE;MACTC,OAAO,CAAC,IAAI,CAAC;IACf;IAEA,MAAMkB,WAAW,GAAG1B,KAAK,CAACwB,QAAQ,CAAC,CAACC,QAAQ,CAAC;IAC7C,IAAIE,QAAQ,GAAG3B,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAE5B,IAAI,CAACnC,SAAS,CAACoC,OAAO,EAAEpC,SAAS,CAACqC,OAAO,CAAC,CAACC,QAAQ,CAACL,WAAW,CAACM,KAAK,CAAC,EAAE;MACtE;IACF;IAEA,IAAIN,WAAW,CAACO,KAAK,KAAKvC,SAAS,CAACwC,IAAI,EAAE;MACxCtB,OAAO,CAAC,IAAI,CAAC;MACbe,QAAQ,GAAGQ,YAAY,CAAC,CAAC;MACzBlC,QAAQ,CAAC0B,QAAQ,CAAC;IACpB,CAAC,MAAM,IAAID,WAAW,CAACO,KAAK,KAAKvC,SAAS,CAAC0C,IAAI,EAAE;MAC/CT,QAAQ,GAAGpC,iBAAiB,CAACoC,QAAQ,EAAEH,QAAQ,EAAEC,QAAQ,CAAC;MAC1DxB,QAAQ,CAAC0B,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLA,QAAQ,CAACH,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAACO,KAAK,GAAGvC,SAAS,CAACoC,OAAO;MACtD5B,QAAQ,CAAC0B,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMU,iBAAiB,GACrBA,CAACb,QAAgB,EAAEC,QAAgB,KAClCa,CAA+C,IAAW;IACzDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAChC,IAAI,EAAE;IAEX,MAAMiC,YAAY,GAAGxC,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAClC,MAAMF,WAAW,GAAG1B,KAAK,CAACwB,QAAQ,CAAC,CAACC,QAAQ,CAAC;IAE7C,IAAIC,WAAW,CAACM,KAAK,KAAKvC,SAAS,CAACoC,OAAO,EAAE;MAC3C;IACF,CAAC,MAAM,IAAIH,WAAW,CAACM,KAAK,KAAKvC,SAAS,CAACgD,IAAI,EAAE;MAC/CD,YAAY,CAAChB,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAACO,KAAK,GAAGvC,SAAS,CAACqC,OAAO;MAC1D7B,QAAQ,CAACuC,YAAY,CAAC;MACtB9B,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM,IAAIiB,WAAW,CAACM,KAAK,KAAKvC,SAAS,CAACqC,OAAO,EAAE;MAClDU,YAAY,CAAChB,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAACO,KAAK,GAAGvC,SAAS,CAACgD,IAAI;MACvDxC,QAAQ,CAACuC,YAAY,CAAC;MACtB9B,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAEH,MAAMiC,eAAe,GAAGA,CAAA,KAAY;IAClC,IAAInC,IAAI,EAAE;MACRC,OAAO,CAAC,KAAK,CAAC;MACdF,OAAO,CAAC,CAAC,CAAC;MACVL,QAAQ,CAACX,aAAa,CAAC,CAAC,CAAC;MACzBoB,cAAc,CAAC,EAAE,CAAC;MAClBE,OAAO,CAAC,KAAK,CAAC;IAChB;EACF,CAAC;EAED,MAAM+B,WAAW,GAAGA,CAAA,KAAuB;IACzC,OAAO3C,KAAK,CAAC4C,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAC7BD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACrBnD,OAAA,CAACL,MAAM;MAELwC,KAAK,EAAEe,IAAI,CAACf,KAAM;MAClBC,KAAK,EAAEc,IAAI,CAACd,KAAM;MAClBgB,OAAO,EAAE1B,eAAgB;MACzB2B,SAAS,EAAEb,iBAAkB;MAC7BQ,GAAG,EAAEC,QAAS;MACdK,GAAG,EAAEH;IAAS,GANR,GAAEF,QAAS,IAAGE,QAAS,EAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO/B,CACF,CACH,CAAC;EACH,CAAC;EAED,MAAMpB,YAAY,GAAGA,CAAA,KAAgB;IACnC,MAAMK,YAAY,GAAGxC,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAClC,OAAOY,YAAY,CAACI,GAAG,CAAEC,GAAG,IAC1BA,GAAG,CAACD,GAAG,CAAEG,IAAI,IAAK;MAChB,IAAIA,IAAI,CAACd,KAAK,KAAKvC,SAAS,CAACwC,IAAI,EAAE;QACjC,OAAO;UACL,GAAGa,IAAI;UACPf,KAAK,EAAEvC,SAAS,CAACoC;QACnB,CAAC;MACH;MAEA,OAAOkB,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACElD,OAAA;IAAK2D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5D,OAAA;MAAK2D,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB5D,OAAA,CAACR,aAAa;QAAC4C,KAAK,EAAExB;MAAY;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrC1D,OAAA;QAAK2D,SAAS,EAAC,MAAM;QAACP,OAAO,EAAEP,eAAgB;QAAAe,QAAA,eAC7C5D,OAAA;UAAM6D,IAAI,EAAC,OAAO;UAAC,cAAW,MAAM;UAAAD,QAAA,EACjCvD;QAAI;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN1D,OAAA,CAACR,aAAa;QAAC4C,KAAK,EAAE5B;MAAK;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACN1D,OAAA;MAAK2D,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEd,WAAW,CAAC;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACxD,EAAA,CAtJID,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AAwJT,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}