{"ast":null,"code":"var _jsxFileName = \"/Users/lijiheng/CS/GithubProject/minesweeper/src/components/Button/index.tsx\";\nimport React from \"react\";\nimport \"./Button.scss\";\nimport { CellState, CellValue } from \"../../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  state,\n  value,\n  onClick,\n  row,\n  col\n}) => {\n  const renderContent = () => {\n    if (state === CellState.visible) {\n      if (value === CellValue.bomb) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"image\",\n          \"aria-label\": \"bomb\",\n          children: \"\\uD83D\\uDCA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this);\n      } else if (value === CellValue.none) {\n        return null;\n      }\n      return value;\n    } else if (state == CellState.flagged) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"image\",\n        \"aria-label\": \"flag\",\n        children: \"\\uD83D\\uDEA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Button ${state === CellState.visible ? \"visible\" : \"\"} value-${value}`,\n    onClick: onClick(row, col),\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","CellState","CellValue","jsxDEV","_jsxDEV","Button","state","value","onClick","row","col","renderContent","visible","bomb","role","children","fileName","_jsxFileName","lineNumber","columnNumber","none","flagged","className","_c","$RefreshReg$"],"sources":["/Users/lijiheng/CS/GithubProject/minesweeper/src/components/Button/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport \"./Button.scss\";\nimport { CellState, CellValue } from \"../../types\";\n\ninterface ButtonProps {\n  row: number;\n  col: number;\n  state: CellState;\n  value: CellValue;\n  onClick(rowParam: number, colParam: number): (...args: any[]) => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({ state, value, onClick, row, col }) => {\n  const renderContent = (): React.ReactNode => {\n    if (state === CellState.visible) {\n      if (value === CellValue.bomb) {\n        return (\n          <span role=\"image\" aria-label=\"bomb\">\n            ðŸ’£\n          </span>\n        );\n      } else if (value === CellValue.none) {\n        return null;\n      }\n\n      return value;\n    } else if (state == CellState.flagged) {\n      return (\n        <span role=\"image\" aria-label=\"flag\">\n          ðŸš©\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div\n      className={`Button ${state === CellState.visible ? \"visible\" : \"\"} value-${value}`}\n      onClick={onClick(row, col)}\n    >\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAe;AACtB,SAASC,SAAS,EAAEC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,OAAO;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAC7E,MAAMC,aAAa,GAAGA,CAAA,KAAuB;IAC3C,IAAIL,KAAK,KAAKL,SAAS,CAACW,OAAO,EAAE;MAC/B,IAAIL,KAAK,KAAKL,SAAS,CAACW,IAAI,EAAE;QAC5B,oBACET,OAAA;UAAMU,IAAI,EAAC,OAAO;UAAC,cAAW,MAAM;UAAAC,QAAA,EAAC;QAErC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEX,CAAC,MAAM,IAAIZ,KAAK,KAAKL,SAAS,CAACkB,IAAI,EAAE;QACnC,OAAO,IAAI;MACb;MAEA,OAAOb,KAAK;IACd,CAAC,MAAM,IAAID,KAAK,IAAIL,SAAS,CAACoB,OAAO,EAAE;MACrC,oBACEjB,OAAA;QAAMU,IAAI,EAAC,OAAO;QAAC,cAAW,MAAM;QAAAC,QAAA,EAAC;MAErC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAEX;IAEA,OAAO,IAAI;EACb,CAAC;EAED,oBACEf,OAAA;IACEkB,SAAS,EAAG,UAAShB,KAAK,KAAKL,SAAS,CAACW,OAAO,GAAG,SAAS,GAAG,EAAG,UAASL,KAAM,EAAE;IACnFC,OAAO,EAAEA,OAAO,CAACC,GAAG,EAAEC,GAAG,CAAE;IAAAK,QAAA,EAE1BJ,aAAa,CAAC;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACI,EAAA,GAjCIlB,MAA6B;AAmCnC,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}